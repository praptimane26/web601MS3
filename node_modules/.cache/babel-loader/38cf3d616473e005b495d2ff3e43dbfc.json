{"ast":null,"code":"//Brian Design. (2020, August 31). React Form Validation Using Custom Hooks Tutorial—Beginner React JS Project. https://www.youtube.com/watch?v=KGFG-yQD7Dw\n// import { useState, useEffect } from \"react\";\n// const useForm = (validate) => {\n//   const [values, setValues] = useState({\n//     username: \"\",\n//     email: \"\",\n//     password: \"\",\n//     password2: \"\",\n//   });\n//   const [errors, setErrors] = useState({});\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n//   const handleChange = (e) => {\n//     //e short for events function\n//     const { name, value } = e.target;\n//     setValues({\n//       ...values,\n//       [name]: value,\n//     });\n//   };\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     setErrors(validate(values));\n//     setIsSubmitting(true);\n//   };\n//   return { handleChange, values, handleSubmit, errors };\n// };\n// export default useForm;","map":{"version":3,"sources":["/home/praptiankush-mane/public_html/testing/kaylajolly/src/components/pages/useForm.js"],"names":[],"mappings":"AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA","sourcesContent":["//Brian Design. (2020, August 31). React Form Validation Using Custom Hooks Tutorial—Beginner React JS Project. https://www.youtube.com/watch?v=KGFG-yQD7Dw\r\n\r\n\r\n// import { useState, useEffect } from \"react\";\r\n\r\n// const useForm = (validate) => {\r\n//   const [values, setValues] = useState({\r\n//     username: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//     password2: \"\",\r\n//   });\r\n//   const [errors, setErrors] = useState({});\r\n//   const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     //e short for events function\r\n//     const { name, value } = e.target;\r\n//     setValues({\r\n//       ...values,\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     setErrors(validate(values));\r\n//     setIsSubmitting(true);\r\n//   };\r\n\r\n//   return { handleChange, values, handleSubmit, errors };\r\n// };\r\n\r\n// export default useForm;\r\n"]},"metadata":{},"sourceType":"module"}