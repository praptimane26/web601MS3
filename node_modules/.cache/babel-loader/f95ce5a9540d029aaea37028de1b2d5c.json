{"ast":null,"code":"var _jsxFileName = \"/home/praptiankush-mane/public_html/testing/kaylajolly/src/components/pages/LoginWithContext.jsx\";\nimport React, { useContext } from 'react';\nimport { useImmerReducer } from 'use-immer';\nimport { login, storeComment } from './utils';\n\nfunction loginReducer(draft, action) {\n  switch (action.type) {\n    case 'field':\n      {\n        draft[action.fieldName] = action.payload;\n        return;\n      }\n\n    case 'login':\n      {\n        draft.error = '';\n        draft.isLoading = true;\n        return;\n      }\n\n    case 'success':\n      {\n        draft.isLoggedIn = true;\n        draft.isLoading = false; //draft.username = '';\n\n        draft.password = '';\n        return;\n      }\n\n    case 'error':\n      {\n        draft.error = 'Incorrect username or password!';\n        draft.isLoggedIn = false;\n        draft.isLoading = false;\n        draft.username = '';\n        draft.password = '';\n        return;\n      }\n\n    case 'logOut':\n      {\n        draft.isLoggedIn = false;\n        return;\n      }\n\n    case 'toggleTodoCompleted':\n      {\n        const todo = draft.todos.find(item => item.title === action.payload);\n        todo.completed = !todo.completed;\n        return;\n      }\n\n    case 'comment':\n      {\n        draft.error = '';\n        draft.isLoading = true;\n        return;\n      }\n\n    default:\n      return;\n  }\n}\n\nconst todos = [{\n  title: 'Get milk',\n  completed: true\n}, {\n  title: 'Make YouTube video',\n  completed: false\n}, {\n  title: 'Write blog post',\n  completed: false\n}];\nconst initialState = {\n  username: '',\n  password: '',\n  isLoading: false,\n  error: '',\n  isLoggedIn: false,\n  todos\n};\nconst StateContext = React.createContext();\nconst DispatchContext = React.createContext();\nexport default function LoginUseContext() {\n  const [state, dispatch] = useImmerReducer(loginReducer, initialState);\n  const {\n    username,\n    password,\n    isLoading,\n    error,\n    isLoggedIn,\n    todos\n  } = state;\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    dispatch({\n      type: 'login'\n    });\n\n    try {\n      await login({\n        username,\n        password\n      }); // <<< HERE WE CONNECT UP TO THE API CALL IN util.js\n\n      dispatch({\n        type: 'success'\n      });\n    } catch (error) {\n      dispatch({\n        type: 'error'\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DispatchContext.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App useContext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, isLoggedIn ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Welcome \", username, \"!\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'logOut'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Log Out\"), /*#__PURE__*/React.createElement(TodoPage, {\n    todos: todos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \" \", error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 27\n    }\n  }, error), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Please Login!\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    value: username,\n    onChange: e => dispatch({\n      type: 'field',\n      fieldName: 'username',\n      payload: e.currentTarget.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"password\",\n    autoComplete: \"new-password\",\n    value: password,\n    onChange: e => dispatch({\n      type: 'field',\n      fieldName: 'password',\n      payload: e.currentTarget.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit\",\n    type: \"submit\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, isLoading ? 'Logging in...' : 'Log In'))))));\n}\n\nfunction TodoPage({\n  todos\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, \"To Do with Comments\"), todos.map(item => /*#__PURE__*/React.createElement(TodoItem, Object.assign({\n    key: item.title\n  }, item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }))));\n}\n\nfunction TodoItem({\n  title,\n  completed\n}) {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const {\n    username,\n    comment,\n    isLoading,\n    error,\n    isLoggedIn\n  } = state; //const isLoggedIn = true;\n\n  const onSubmitComment = async e => {\n    e.preventDefault();\n    dispatch({\n      type: 'comment'\n    });\n\n    try {\n      alert('Calling api to store the comment - something wrong with the login state');\n      await storeComment({\n        username,\n        comment\n      }); // <<< HERE WE CONNECT UP TO THE API CALL IN util.js\n\n      dispatch({\n        type: 'success'\n      });\n    } catch (error) {\n      dispatch({\n        type: 'error'\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: completed,\n    onClick: () => {\n      if (!isLoggedIn) {\n        alert('Please login to click this!');\n      }\n    },\n    onChange: () => {\n      if (isLoggedIn) {\n        dispatch({\n          type: 'toggleTodoCompleted',\n          payload: title\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, \" \", error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 27\n    }\n  }, error), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, \"Enter Comment\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    placeholder: \"username\",\n    value: username,\n    onChange: e => dispatch({\n      type: 'field',\n      fieldName: 'username',\n      payload: e.currentTarget.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"comment\",\n    value: comment,\n    onChange: e => dispatch({\n      type: 'field',\n      fieldName: 'comment',\n      payload: e.currentTarget.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit\",\n    type: \"submit\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, isLoading ? 'Logging in...' : 'Save'))));\n}","map":{"version":3,"sources":["/home/praptiankush-mane/public_html/testing/kaylajolly/src/components/pages/LoginWithContext.jsx"],"names":["React","useContext","useImmerReducer","login","storeComment","loginReducer","draft","action","type","fieldName","payload","error","isLoading","isLoggedIn","password","username","todo","todos","find","item","title","completed","initialState","StateContext","createContext","DispatchContext","LoginUseContext","state","dispatch","onSubmit","e","preventDefault","currentTarget","value","TodoPage","map","TodoItem","comment","onSubmitComment","alert"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { useImmerReducer } from 'use-immer';\r\nimport { login, storeComment } from './utils';\r\n\r\nfunction loginReducer(draft, action) {\r\n  switch (action.type) {\r\n    case 'field': {\r\n      draft[action.fieldName] = action.payload;\r\n      return;\r\n    }\r\n    case 'login': {\r\n      draft.error = '';\r\n      draft.isLoading = true;\r\n      return;\r\n    }\r\n    case 'success': {\r\n      draft.isLoggedIn = true;\r\n      draft.isLoading = false;\r\n      //draft.username = '';\r\n      draft.password = '';\r\n      return;\r\n    }\r\n    case 'error': {\r\n      draft.error = 'Incorrect username or password!';\r\n      draft.isLoggedIn = false;\r\n      draft.isLoading = false;\r\n      draft.username = '';\r\n      draft.password = '';\r\n      return;\r\n    }\r\n    case 'logOut': {\r\n      draft.isLoggedIn = false;\r\n      return;\r\n    }\r\n    case 'toggleTodoCompleted': {\r\n      const todo = draft.todos.find((item) => item.title === action.payload);\r\n      todo.completed = !todo.completed;\r\n      return;\r\n    }\r\n    case 'comment':{\r\n        draft.error = '';\r\n        draft.isLoading = true;\r\n        return;\r\n    }\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nconst todos = [\r\n  {\r\n    title: 'Get milk',\r\n    completed: true,\r\n  },\r\n  {\r\n    title: 'Make YouTube video',\r\n    completed: false,\r\n  },\r\n  {\r\n    title: 'Write blog post',\r\n    completed: false,\r\n  },\r\n];\r\n\r\nconst initialState = {\r\n  username: '',\r\n  password: '',\r\n  isLoading: false,\r\n  error: '',\r\n  isLoggedIn: false,\r\n  todos,\r\n};\r\n\r\nconst StateContext = React.createContext();\r\nconst DispatchContext = React.createContext();\r\n\r\nexport default function LoginUseContext() {\r\n  const [state, dispatch] = useImmerReducer(loginReducer, initialState);\r\n  const { username, password, isLoading, error, isLoggedIn, todos } = state;\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch({ type: 'login' });\r\n\r\n    try {\r\n      await login({ username, password }); // <<< HERE WE CONNECT UP TO THE API CALL IN util.js\r\n      dispatch({ type: 'success' });\r\n    } catch (error) {\r\n      dispatch({ type: 'error' });\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <DispatchContext.Provider value={dispatch}>\r\n      <StateContext.Provider value={state}>\r\n        <div className='App useContext'>\r\n          <div className='login-container'>\r\n            {isLoggedIn ? (\r\n              <>\r\n                <h1>Welcome {username}!</h1>\r\n                <button onClick={() => dispatch({ type: 'logOut' })}>\r\n                  Log Out\r\n                </button>          \r\n                <TodoPage todos={todos} />\r\n\r\n              </>\r\n            ) : (\r\n              <form className='form' onSubmit={onSubmit}> {/* HERE THE onSubmit is set up !!*/ }\r\n                {error && <p className='error'>{error}</p>}\r\n                <p>Please Login!</p>\r\n                <input\r\n                  type='text'\r\n                  placeholder='username'\r\n                  value={username}\r\n                  onChange={(e) =>\r\n                    dispatch({\r\n                      type: 'field',\r\n                      fieldName: 'username',\r\n                      payload: e.currentTarget.value,\r\n                    })\r\n                  }\r\n                />\r\n                <input\r\n                  type='password'\r\n                  placeholder='password'\r\n                  autoComplete='new-password'\r\n                  value={password}\r\n                  onChange={(e) =>\r\n                    dispatch({\r\n                      type: 'field',\r\n                      fieldName: 'password',\r\n                      payload: e.currentTarget.value,\r\n                    })\r\n                  }\r\n                />\r\n                <button className='submit' type='submit' disabled={isLoading}>\r\n                  {isLoading ? 'Logging in...' : 'Log In'}\r\n                </button>\r\n              </form>\r\n            )}\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </StateContext.Provider>\r\n    </DispatchContext.Provider>\r\n  );\r\n}\r\n\r\nfunction TodoPage({ todos }) {\r\n  return (\r\n    <div className='todoContainer'>\r\n      <h2>To Do with Comments</h2>\r\n      {todos.map((item) => (\r\n        <TodoItem key={item.title} {...item} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TodoItem({ title, completed }) {\r\n  const dispatch = useContext(DispatchContext);\r\n  const state = useContext(StateContext);\r\n  const   { username, comment, isLoading, error, isLoggedIn } = state;\r\n  //const isLoggedIn = true;\r\n\r\n  const onSubmitComment = async (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch({ type: 'comment' });\r\n\r\n    try {\r\n      alert('Calling api to store the comment - something wrong with the login state');\r\n      await storeComment({ username, comment }); // <<< HERE WE CONNECT UP TO THE API CALL IN util.js\r\n      dispatch({ type: 'success' });\r\n    } catch (error) {\r\n      dispatch({ type: 'error' });\r\n    }\r\n  };\r\n  return (\r\n    <div className='todoItem'>\r\n      <p>{title}</p>\r\n      <div>\r\n        <input\r\n          type='checkbox'\r\n          checked={completed}\r\n          onClick={() => {\r\n            if (!isLoggedIn) {\r\n              alert('Please login to click this!');\r\n            }\r\n          }}\r\n          onChange={() => {\r\n            if (isLoggedIn) {\r\n              dispatch({ type: 'toggleTodoCompleted', payload: title });\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n      <form className='form' onSubmit={onSubmitComment}> {/* HERE THE onSubmiComment is set up !!*/ }\r\n                {error && <p className='error'>{error}</p>}\r\n                <p>Enter Comment</p>\r\n                <input\r\n                  type='hidden'\r\n                  placeholder='username'\r\n                  value={username}\r\n                  onChange={(e) =>\r\n                    dispatch({\r\n                      type: 'field',\r\n                      fieldName: 'username',\r\n                      payload: e.currentTarget.value,\r\n                    })\r\n                  }\r\n                />\r\n                <input\r\n                  type='text'\r\n                  placeholder='comment'\r\n                  value={comment}\r\n                  onChange={(e) =>\r\n                    dispatch({\r\n                      type: 'field',\r\n                      fieldName: 'comment',\r\n                      payload: e.currentTarget.value,\r\n                    })\r\n                  }\r\n                />\r\n                <button className='submit' type='submit' disabled={isLoading}>\r\n                  {isLoading ? 'Logging in...' : 'Save'}\r\n                </button>\r\n              </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}